import static java.lang.Runtime.runtime

plugins {
    id 'application'
    id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '8.1.0'
    id 'com.github.spotbugs' version '5.0.13'
    id 'io.freefair.lombok' version '6.6.3'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of({{ cookiecutter.java_version }})
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs += "-parameters"
}

repositories {
    mavenCentral()
}

final LATEST = 'latest.release'

dependencies {
    implementation "org.slf4j:slf4j-api:$LATEST"
    runtimeOnly "ch.qos.logback:logback-classic:$LATEST"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$LATEST"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$LATEST"
    testImplementation "org.mockito:mockito-core:$LATEST"
    testImplementation "org.assertj:assertj-core:$LATEST"

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

application {
    mainClass = '{{ cookiecutter.package }}.Application'
}

test {
    useJUnitPlatform()

    maxParallelForks = runtime.availableProcessors().intdiv(2) ?: 1

    systemProperty(
        'junit.jupiter.displayname.generator.default',
        'org.junit.jupiter.api.DisplayNameGenerator$ReplaceUnderscores')
    systemProperty('junit.jupiter.execution.parallel.enabled', true)
    systemProperty('junit.jupiter.execution.parallel.mode.default', 'concurrent')
}
